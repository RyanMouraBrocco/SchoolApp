CREATE DATABASE IdentityProvider;
USE IdentityProvider;
CREATE TABLE [Account]
(
	Id INT IDENTITY NOT NULL PRIMARY KEY,
	Name NVARCHAR(400) NOT NULL,
	Amount DECIMAL(18, 2) NOT NULL,
	CreationDate DATETIME NOT NULL,
	UpdateDate DATETIME NOT NULL,
	Deleted BIT NOT NULL
);
CREATE TABLE [Owner]
(
	Id INT IDENTITY NOT NULL PRIMARY KEY,
	AccountId INT NOT NULL,
	Name NVARCHAR(400) NOT NULL,
	Email NVARCHAR(200) NOT NULL,
	Password NVARCHAR(200) NOT NULL,
	DocumentId NVARCHAR(100) NULL,
	IsMainOwner BIT NOT NULL,
	CreatorId INT NOT NULL,
	CreationDate DATETIME NOT NULL,
	UpdaterId INT NULL,
	UpdateDate DATETIME NULL,
	Deleted BIT NOT NULL
);
CREATE TABLE [Teacher]
(
	Id INT IDENTITY NOT NULL PRIMARY KEY,
	AccountId INT NOT NULL,
	Name NVARCHAR(400) NOT NULL,
	Email NVARCHAR(200) NOT NULL,
	Password NVARCHAR(200) NOT NULL,
	DocumentId NVARCHAR(100) NULL,
	AcademicFormation NVARCHAR(200) NULL,
	Salary DECIMAL(18, 2) NOT NULL,
	HiringDate DATETIME NOT NULL,
	CreatorId INT NOT NULL,
	CreationDate DATETIME NOT NULL,
	UpdaterId INT NULL,
	UpdateDate DATETIME NULL,
	Deleted BIT NOT NULL
);
CREATE TABLE [Manager]
(
	Id INT IDENTITY NOT NULL PRIMARY KEY,
	AccountId INT NOT NULL,
	Name NVARCHAR(400) NOT NULL,
	Email NVARCHAR(200) NOT NULL,
	Password NVARCHAR(200) NOT NULL,
	DocumentId NVARCHAR(100) NULL,
	AcademicFormation NVARCHAR(200) NULL,
	Salary DECIMAL(18, 2) NOT NULL,
	HiringDate DATETIME NOT NULL,
	FunctionId INT NOT NULL,
	CreatorId INT NOT NULL,
	CreationDate DATETIME NOT NULL,
	UpdaterId INT NULL,
	UpdateDate DATETIME NULL,
	Deleted BIT NOT NULL
);
CREATE TABLE [Function] 
(
	Id INT IDENTITY NOT NULL PRIMARY KEY,
	AccountId INT NOT NULL,
	Name NVARCHAR(150) NOT NULL,
	Description NVARCHAR(400) NULL,
	CreatorId INT NOT NULL,
	CreationDate DATETIME NOT NULL,
	UpdaterId INT NULL,
	UpdateDate DATETIME NULL,
	Deleted BIT NULL
);
CREATE TABLE [Teacher_Formation]
(
	Id INT IDENTITY NOT NULL PRIMARY KEY,
	TeacherId INT NOT NULL,
	AcademicFormation NVARCHAR(200) NOT NULL,
	UniversityDegree NVARCHAR(300) NOT NULL,
	UniversityDegreeDate DATETIME 
);
-- SET FOREIGN KEYS RELATIONS
--   ACCOUNTID
ALTER TABLE Owner ADD CONSTRAINT [FK_Owner_AccountId] FOREIGN KEY (AccountId) REFERENCES [Account](Id);
ALTER TABLE Teacher ADD CONSTRAINT [FK_Teacher_AccountId] FOREIGN KEY (AccountId) REFERENCES [Account](Id);
ALTER TABLE Manager ADD CONSTRAINT [FK_Manager_AccountId] FOREIGN KEY (AccountId) REFERENCES [Account](Id);
ALTER TABLE [Function] ADD CONSTRAINT [FK_Function_AccountId] FOREIGN KEY (AccountId) REFERENCES [Account](Id);

-- Geral relations
ALTER TABLE Manager ADD CONSTRAINT [FK_Manager_FunctionId] FOREIGN KEY (FunctionId) REFERENCES [Function](Id);
ALTER TABLE Teacher_Formation ADD CONSTRAINT [FK_Teacher_Formation_TeacherId] FOREIGN KEY (TeacherId) REFERENCES [Teacher](Id);


-- SET INDEXES TO PERFORMANCE
CREATE NONCLUSTERED INDEX IX_Teacher_Email ON [Teacher](Email);
CREATE NONCLUSTERED INDEX IX_Manager_Email ON [Manager](Email);



SELECT * FROM Manager m 


